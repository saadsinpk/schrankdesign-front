import * as THREE from "three"
import { extend } from "@react-three/fiber"
import { RoundedBoxGeometry } from "three-stdlib"

extend({ RoundedBoxGeometry })

const Config = {
  init: {
    elementsCount: 4,
    shelfCount: 4
  },
  plate: {
    width: 200,
    height: 240,
    depth: 60,
    minWidth: 30,
    maxWidth: 800,
    minHeight: 40,
    maxHeight: 262.5,
    minDepth: 20,
    maxDepth: 120,
    maxDoorLength: 60,
    minDoorLength: 25,
    maxDoubleDoorLength: 120,
    minDoubleDoorLength: 60,
    thickness: 1.9,
    plinthHeight: 8,
    plinthIncident: 1,
    backIncident: 1,
    backThickness: 0.8,
    backOverlapping: 0.5,
    radius: 0.1,
    bevel: 4,
    material: new THREE.MeshStandardMaterial(),
    type: {
      vertical: "vertical",
      horizontal: "horizontal",
    },
  },
  dimension: {
    material: new THREE.LineBasicMaterial({
      color: "#000000",
      linewidth: 10,
    }),
  },
  baseType: {
    gliders: "gliders",
    panel: "panel",
  },
  glider: {
    height: 2,
    radius: 2.5,
    material: new THREE.MeshStandardMaterial({ color: "black" }),
  },
  cutout: {
    depth: 2.5,
    minDepth: 0.9,
    maxDepth: 3.4,
    height: 4,
    minHeight: 2,
    maxHeight: 8,
  },
  fittingType: {
    all: "all",
    left: "left",
    right: "right",
    top: "top",
  },
  furnishing: {
    type: {
      shelf: "Shelf",
      foldBottom: "Fold Bottom",
      glassBottom: "Glass Bottom",
      drawer: "Drawer",
      internalDrawer: "Internal Drawer",
      clothesRail: "Clothes Rail Height Adjustable",
      clothesLift: "Clothes Lift",
      pantsPullout: "Pants Pull-out",
      ledLighting: "Led Lighting",
      slopingFloor: "Sloping Floor",
      divider: "Divider Page",
      door: "Door",
    },
    default: {
      raster: 1,
      interval: 10,
      spaceSides: 0.1,
      spaceFront: 0.5,
      elementWidth: 46.3,
      elementHeight: 220,
      frontInterval: 0.15,
      shelfOverlapping: 0.8,
      hoverMaterial: new THREE.MeshStandardMaterial({
        transparent: true,
        opacity: 0,
      }),
    },
    shelf: {
      raster: 3.2,
      interval: 16,
      thickness1: 1.9,
      thickness2: 2.5,
      minWidth: 15,
      maxWidth: 120,
      minDepth: 30,
      maxDepth: 120,
      material: new THREE.MeshStandardMaterial(),
    },
    glassBottom: {
      raster: 3.2,
      thickness: 0.5,
      material: new THREE.MeshStandardMaterial({
        color: 0x6f5c56,
        transparent: true,
        opacity: 0.5,
      }),
    },
    foldBottom: {
      minWidth: 15,
      maxWidth: 120,
      minDepth: 30,
      maxDepth: 120,
      thickness1: 1.9,
      thickness2: 2.5,
    },
    drawer: {
      backSpace: 1,
      thickness: 1.6,
      sideIncident: 0.5,
      bottomOverlapping: 0.8,
      bottomIncident: 1.2,
      bottomShelfDistance: 1.6,
      topShelfDistance: 0.7,
      frontThickness: 1.9,
      bodyFrontIncident: 0.2,
      backHeightDifference: 0.2,
      depthRange: [66, 61, 56, 51, 46, 41, 36, 31, 26],
      defaultDepth: 56,
      defaultWidth: 55.2,
      defaultHeight: [8, 16, 24],
      shelfThickness1: 1.9,
      shelfThickness2: 2.5,
      heightInterval: 0.3,
      material: new THREE.MeshStandardMaterial(),
    },
    internalDrawer: {
      panelWidth: 3.8,
      panelSpace: 0.85,
      bottomShelfDistance: 1.25,
      topShelfDistance: 2.5,
      frontInnerSpace: 7,
      frontSpace: 0.3,
    },
    clothesRail: {
      defaultWidth: 47.6,
      defaultHeight: 3,
      defaultDepth: 1.5,
      widthDelta: 0.3,
      posYDelta: 1.9,
      topSpace: 5.5,
      availableSpace: 80,
    },
    clothesLift: {
      defaultWidth: 52.2,
      defaultHeight: 2.4,
      defaultDepth: 1.2,
      widthDelta: 0.3,
      leftYDelta: -82.5,
      handleYDelta: -75.5,
      handleZDelta: 2.3,
      railWidthDiff: 15,
      topSpace: 4,
      availableSpace: 105,
      availableDepth: 50,
    },
    pantsPullout: {
      availableDepth: 48,
      depthDiff: 5,
      pulloutDepth: 47.4,
      availableSpace: 50,
    },
    ledLighting: {
      frontInnerSpace: 6,
      defaultDepth: 1,
      defaultWidth: 0.1,
      material: new THREE.MeshStandardMaterial({
        color: "white",
        emissive: "white",
        emissiveIntensity: 3,
      }),
    },
    slopingFloor: {
      defaultWidth: 47.6,
      defaultHeight: 80,
      availableDepth: 50,
      zIncident: 1,
      angle: Math.PI / 6,
      wallHeight: 7,
      thickness: 1.9,
    },
    divider: {
      minWidth: 15,
      thickness: 1.9,
      defaultHeight: 200,
    },
  },
  door: {
    type: {
      revolving_left: "revolving_door",
      revolving_right: "revolving_Door",
      revolving_double: "revolving_Door",
      mirror_left: "mirror_door",
      mirror_right: "mirror_Door",
      mirror_double: "mirror_Door",
      sliding_double: "sliding_double",
      sliding_triple: "sliding_triple",
    },
    category: {
      standard: "standard",
      mirror: "mirror",
      sliding: "sliding",
    },
    mirror_thickness: 0.5,
    defaultHeight: 200,
    defaultWidth: 50,
    material: new THREE.MeshStandardMaterial({
      color: "red",
      transparent: true,
      opacity: 0.5,
    }),
    left_type_range: {
      min: 15,
      max: 60,
    },
    double_type_range: {
      min: 30,
      max: 120,
    },
    min_height: 30,
  },
  view: {
    front: "front",
    dimension: "dimension",
    around: "around",
  },
  color: {
    color: {
      type0: "type0",
      type1: "type1",
      type2: "type2",
      type3: "type3",
      type4: "type4",
      type5: "type5",
      type6: "type6",
      type7: "type7",
      type8: "type8",
      type9: "type9",
      type10: "type10",
      type11: "type11",
      type12: "type12",
    },
    wood: {
      type0: "wtype0",
      type1: "wtype1",
      type2: "wtype2",
      type3: "wtype3",
      type4: "wtype4",
      type5: "wtype5",
      type6: "wtype6",
      type7: "wtype7",
      type8: "wtype8",
    },
    special: {
      type0: "stype0",
      type1: "stype1",
      type2: "stype2",
      type3: "stype3",
      type4: "stype4",
    },
    type: {
      color: "color",
      wood: "wood",
      special: "special",
    },
    category: {
      body: "body",
      front: "front",
    },
  },
  elementIndex: {
    first: "first",
    middle: "middle",
    last: "last",
  },
}

export default Config
